{"ast":null,"code":"var _jsxFileName = \"/Users/ronikennedy/classinsight_frontend/src/app/pages/Roster/Roster.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from '../../../components/NavBar/NavBar';\nimport styles from './Roster.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Roster = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedAll, setSelectedAll] = useState(false);\n  const [selectedStudents, setSelectedStudents] = useState({});\n  const studentData = Array(8).fill().map((_, index) => ({\n    id: index,\n    name: \"Anderson, Joseph\",\n    email: \"ajs5@miami.edu\"\n  }));\n  const handleSelectAll = e => {\n    const isChecked = e.target.checked;\n    setSelectedAll(isChecked);\n    const newSelected = {};\n    studentData.forEach(student => {\n      newSelected[student.id] = isChecked;\n    });\n    setSelectedStudents(newSelected);\n  };\n  const handleSelectStudent = id => {\n    const newSelected = {\n      ...selectedStudents\n    };\n    newSelected[id] = !newSelected[id];\n    setSelectedStudents(newSelected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pageContainer,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.staticContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Live Demo \\u203A Basic \\u203A Roster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progressBar,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rosterHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Class Roster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.exportButton,\n          children: \"Export selected as CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.scrollableContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.rosterList,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.selectAll,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedAll,\n              onChange: handleSelectAll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Select All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), studentData.map(student => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.rosterItem,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedStudents[student.id] || false,\n              onChange: () => handleSelectStudent(student.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [student.name, \" \\u2014 \", student.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.dropZone,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Select a file or drag and drop here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.supportText,\n            children: \"Format: csv size limits max 10MB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navigation,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/basic-demo'),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/next-step'),\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Roster, \"bn8oEjj4UPht8i3UlWv0ShGzXoQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Roster;\nexport default Roster;\nvar _c;\n$RefreshReg$(_c, \"Roster\");","map":{"version":3,"names":["React","useState","useNavigate","NavBar","styles","jsxDEV","_jsxDEV","Roster","_s","navigate","selectedAll","setSelectedAll","selectedStudents","setSelectedStudents","studentData","Array","fill","map","_","index","id","name","email","handleSelectAll","e","isChecked","target","checked","newSelected","forEach","student","handleSelectStudent","className","pageContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","staticContent","progressBar","progress","rosterHeader","exportButton","scrollableContent","rosterList","selectAll","type","onChange","rosterItem","dropZone","supportText","navigation","onClick","_c","$RefreshReg$"],"sources":["/Users/ronikennedy/classinsight_frontend/src/app/pages/Roster/Roster.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from '../../../components/NavBar/NavBar';\nimport styles from './Roster.module.scss';\n\nconst Roster = () => {\n  const navigate = useNavigate();\n  const [selectedAll, setSelectedAll] = useState(false);\n  const [selectedStudents, setSelectedStudents] = useState({});\n\n  const studentData = Array(8).fill().map((_, index) => ({\n    id: index,\n    name: \"Anderson, Joseph\",\n    email: \"ajs5@miami.edu\"\n  }));\n\n  const handleSelectAll = (e) => {\n    const isChecked = e.target.checked;\n    setSelectedAll(isChecked);\n    const newSelected = {};\n    studentData.forEach(student => {\n      newSelected[student.id] = isChecked;\n    });\n    setSelectedStudents(newSelected);\n  };\n\n  const handleSelectStudent = (id) => {\n    const newSelected = { ...selectedStudents };\n    newSelected[id] = !newSelected[id];\n    setSelectedStudents(newSelected);\n  };\n\n  return (\n    <div className={styles.pageContainer}>\n      <NavBar />\n      <div className={styles.staticContent}>\n        <h1>Live Demo › Basic › Roster</h1>\n\n        <div className={styles.progressBar}>\n          <div className={styles.progress}></div>\n        </div>\n\n        <div className={styles.rosterHeader}>\n          <h2>Class Roster</h2>\n          <button className={styles.exportButton}>\n            Export selected as CSV\n          </button>\n        </div>\n\n        <div className={styles.scrollableContent}>\n          <div className={styles.rosterList}>\n            <label className={styles.selectAll}>\n              <input \n                type=\"checkbox\"\n                checked={selectedAll}\n                onChange={handleSelectAll}\n              />\n              <span>Select All</span>\n            </label>\n            \n            {studentData.map((student) => (\n              <label key={student.id} className={styles.rosterItem}>\n                <input \n                  type=\"checkbox\"\n                  checked={selectedStudents[student.id] || false}\n                  onChange={() => handleSelectStudent(student.id)}\n                />\n                <span>{student.name} — {student.email}</span>\n              </label>\n            ))}\n          </div>\n\n          <div className={styles.dropZone}>\n            <span>Select a file or drag and drop here</span>\n            <span className={styles.supportText}>Format: csv size limits max 10MB</span>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.navigation}>\n        <button onClick={() => navigate('/basic-demo')}>←</button>\n        <button onClick={() => navigate('/next-step')}>→</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Roster;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ronikennedy/classinsight_frontend/src/app/pages/Loading/Loading.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './Loading.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loading = ({\n  destinationPath = '/results1',\n  loadingTime = 10000\n}) => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Set up timer to navigate after loadingTime (10 seconds by default)\n    const timer = setTimeout(() => {\n      navigate(destinationPath);\n    }, loadingTime);\n\n    // Clean up on unmount\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [navigate, destinationPath, loadingTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pageContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.dotContainer,\n          children: [...Array(8)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.dot,\n            style: {\n              animationDelay: `${index * 0.1}s`\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Collecting responses...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.closeButton,\n      onClick: () => navigate('/'),\n      children: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Loading, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Loading;\nexport default Loading;\nvar _c;\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","useEffect","useNavigate","styles","jsxDEV","_jsxDEV","Loading","destinationPath","loadingTime","_s","navigate","timer","setTimeout","clearTimeout","className","pageContainer","children","loadingSection","loadingContent","dotContainer","Array","map","_","index","dot","style","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","closeButton","onClick","_c","$RefreshReg$"],"sources":["/Users/ronikennedy/classinsight_frontend/src/app/pages/Loading/Loading.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './Loading.module.scss';\n\nconst Loading = ({ destinationPath = '/results1', loadingTime = 10000 }) => {\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    // Set up timer to navigate after loadingTime (10 seconds by default)\n    const timer = setTimeout(() => {\n      navigate(destinationPath);\n    }, loadingTime);\n    \n    // Clean up on unmount\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [navigate, destinationPath, loadingTime]);\n  \n  return (\n    <div className={styles.pageContainer}>\n      <div className={styles.loadingSection}>\n        <div className={styles.loadingContent}>\n          <div className={styles.dotContainer}>\n            {[...Array(8)].map((_, index) => (\n              <div \n                key={index} \n                className={styles.dot} \n                style={{ animationDelay: `${index * 0.1}s` }} \n              />\n            ))}\n          </div>\n          <p>Collecting responses...</p>\n        </div>\n      </div>\n      <button\n        className={styles.closeButton}\n        onClick={() => navigate('/')}\n      >\n        âœ•\n      </button>\n    </div>\n  );\n};\n\nexport default Loading;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAC;EAAEC,eAAe,GAAG,WAAW;EAAEC,WAAW,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,QAAQ,CAACH,eAAe,CAAC;IAC3B,CAAC,EAAEC,WAAW,CAAC;;IAEf;IACA,OAAO,MAAM;MACXK,YAAY,CAACF,KAAK,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACD,QAAQ,EAAEH,eAAe,EAAEC,WAAW,CAAC,CAAC;EAE5C,oBACEH,OAAA;IAAKS,SAAS,EAAEX,MAAM,CAACY,aAAc;IAAAC,QAAA,gBACnCX,OAAA;MAAKS,SAAS,EAAEX,MAAM,CAACc,cAAe;MAAAD,QAAA,eACpCX,OAAA;QAAKS,SAAS,EAAEX,MAAM,CAACe,cAAe;QAAAF,QAAA,gBACpCX,OAAA;UAAKS,SAAS,EAAEX,MAAM,CAACgB,YAAa;UAAAH,QAAA,EACjC,CAAC,GAAGI,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC1BlB,OAAA;YAEES,SAAS,EAAEX,MAAM,CAACqB,GAAI;YACtBC,KAAK,EAAE;cAAEC,cAAc,EAAE,GAAGH,KAAK,GAAG,GAAG;YAAI;UAAE,GAFxCA,KAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGX,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNzB,OAAA;UAAAW,QAAA,EAAG;QAAuB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNzB,OAAA;MACES,SAAS,EAAEX,MAAM,CAAC4B,WAAY;MAC9BC,OAAO,EAAEA,CAAA,KAAMtB,QAAQ,CAAC,GAAG,CAAE;MAAAM,QAAA,EAC9B;IAED;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACrB,EAAA,CAvCIH,OAAO;EAAA,QACMJ,WAAW;AAAA;AAAA+B,EAAA,GADxB3B,OAAO;AAyCb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}